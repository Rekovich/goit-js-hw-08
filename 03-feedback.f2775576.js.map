{"mappings":"gfAQA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,kBAC9BC,EAAQF,SAASC,cAAc,kBAC/BE,EAAUH,SAASC,cAAc,oBAEjCG,EAAW,CAACC,MAAO,GAAIC,QAAS,KAUtC,WACE,IAAMC,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,wBACzCJ,IACFA,EAAKF,MAASD,EAASC,MAAQE,EAAKF,MAAUD,EAASC,MAAQ,GAC/DE,EAAKD,QAAWF,EAASE,QAAUC,EAAKD,QAAYF,EAASE,QAAU,IAEzEJ,EAAMU,MAAQR,EAASC,MACvBF,EAAQS,MAAQR,EAASE,O,CAf3BO,GACAd,EAAKe,iBAAiB,SAAS,EAAAjB,EAAAkB,WAE/B,SAAiBC,GACfZ,EAASY,EAAEC,OAAOC,MAAQF,EAAEC,OAAOL,MACnCF,aAAaS,QAAQ,sBAAuBX,KAAKY,UAAUhB,G,GAJZ,MAiBjDL,EAAKe,iBAAiB,UAEtB,SAAsBO,GACpBA,EAAMC,iBAEc,KAAhBpB,EAAMU,OAAkC,KAAlBT,EAAQS,MAChCW,MAAM,mCAENF,EAAMJ,OAAOO,QACbC,QAAQC,IAAItB,GACZM,aAAaiB,WAAW,uBACxBvB,EAASC,MAAQ,GACjBD,EAASE,QAAU,G","sources":["src/js/03-feedback.js"],"sourcesContent":["// Відстежуй на формі подію input, і щоразу записуй у локальне сховище об'єкт з полями email і message, у яких зберігай поточні значення\n// полів форми. Нехай ключем для сховища буде рядок \"feedback-form-state\".\n// Під час завантаження сторінки перевіряй стан сховища, і якщо там є збережені дані, заповнюй ними поля форми. В іншому випадку поля\n// повинні бути порожніми.\n// Під час сабміту форми очищуй сховище і поля форми, а також виводь у консоль об'єкт з полями email, message та їхніми поточними значеннями.\n// Зроби так, щоб сховище оновлювалось не частіше, ніж раз на 500 мілісекунд. Для цього додай до проекту і використовуй бібліотеку\n// lodash.throttle.\n\nimport { throttle } from 'lodash';\n\nconst form = document.querySelector('.feedback-form');\nconst email = document.querySelector('[name=\"email\"]');\nconst message = document.querySelector('[name=\"message\"]');\n\nconst formData = {email: '', message: ''};\n\nloadData();\nform.addEventListener('input', throttle(setData, 500));\n\nfunction setData(e) {\n  formData[e.target.name] = e.target.value;\n  localStorage.setItem('feedback-form-state', JSON.stringify(formData));\n}\n\nfunction loadData() {\n  const data = JSON.parse(localStorage.getItem('feedback-form-state'));\n  if (data) {\n    data.email ? (formData.email = data.email) : (formData.email = '');\n    data.message ? (formData.message = data.message) : (formData.message = ''); \n  }\n  email.value = formData.email;\n  message.value = formData.message;\n}\n\nform.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(event) {\n  event.preventDefault();\n\n  if (email.value === '' || message.value === '') {\n    alert('Будь ласка, заповніть всі поля');\n  } else {\n    event.target.reset();\n    console.log(formData);\n    localStorage.removeItem('feedback-form-state');\n    formData.email = '';\n    formData.message = '';\n  }\n}\n"],"names":["$1WSnx","parcelRequire","$b00c40859be242c5$var$form","document","querySelector","$b00c40859be242c5$var$email","$b00c40859be242c5$var$message","$b00c40859be242c5$var$formData","email","message","data","JSON","parse","localStorage","getItem","value","$b00c40859be242c5$var$loadData","addEventListener","throttle","e","target","name","setItem","stringify","event","preventDefault","alert","reset","console","log","removeItem"],"version":3,"file":"03-feedback.f2775576.js.map"}